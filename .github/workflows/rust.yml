name: Rust CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-gnu, aarch64-linux-android]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions/setup-rust@v1
      with:
        rust-version: stable

    - name: Install dependencies for cross-compilation
      run: |
        sudo apt-get update
        sudo apt-get install -y mingw-w64
        sudo apt-get install -y wget unzip

    - name: Install Android NDK
      if: matrix.target == 'aarch64-linux-android'
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
        unzip android-ndk-r21e-linux-x86_64.zip
        sudo mv android-ndk-r21e /opt/
        echo "ANDROID_NDK_HOME=/opt/android-ndk-r21e" >> $GITHUB_ENV

    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-

    - name: Build for ${{ matrix.target }}
      run: |
        cargo build --release --target ${{ matrix.target }}

    - name: Create Release
      id: create_release
      uses: gh-actions/create-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v${{ github.run_number }}
        release_name: "Release v${{ github.run_number }}"
        body: "Release v${{ github.run_number }} of penguindex"
        draft: false
        prerelease: false

    - name: Upload Linux Binary to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/${{ matrix.target }}/release/penguindex
        asset_name: penguindex-linux-x86_64
        asset_content_type: application/octet-stream

    - name: Upload Windows Binary to Release
      if: matrix.target == 'x86_64-pc-windows-gnu'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/${{ matrix.target }}/release/penguindex.exe
        asset_name: penguindex-windows-x86_64.exe
        asset_content_type: application/octet-stream

    - name: Upload Termux (aarch64) Binary to Release
      if: matrix.target == 'aarch64-linux-android'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/${{ matrix.target }}/release/penguindex
        asset_name: penguindex-termux-aarch64
        asset_content_type: application/octet-stream
